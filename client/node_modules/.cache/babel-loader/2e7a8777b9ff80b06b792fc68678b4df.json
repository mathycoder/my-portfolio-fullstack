{"ast":null,"code":"'use strict';\n\nconst NAMES = require('../../metrics/names');\n\nconst recordDistributedTrace = require('./distributed-trace');\n\nfunction recordBackground(segment, scope) {\n  // if there was a nested otherTransaction use its recorder instead\n  var tx = segment.transaction;\n\n  if (tx.type === 'bg' && tx.baseSegment && segment !== tx.baseSegment) {\n    return;\n  }\n\n  var duration = segment.getDurationInMillis();\n  var exclusive = segment.getExclusiveDurationInMillis();\n  var totalTime = segment.transaction.trace.getTotalTimeDurationInMillis();\n  var name = segment.partialName;\n\n  if (scope) {\n    tx.measure(scope, null, duration, exclusive);\n    tx.measure(NAMES.OTHER_TRANSACTION.TOTAL_TIME + '/' + name, null, totalTime, exclusive);\n  } // rollup for background total time doesn't have `/all` where the response\n  // time version does.\n\n\n  tx.measure(NAMES.OTHER_TRANSACTION.RESPONSE_TIME + '/all', null, duration, exclusive);\n  tx.measure(NAMES.OTHER_TRANSACTION.TOTAL_TIME, null, totalTime, exclusive);\n\n  if (tx.agent.config.distributed_tracing.enabled) {\n    recordDistributedTrace(tx, 'Other', duration, exclusive);\n  }\n}\n\nmodule.exports = recordBackground;","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/metrics/recorders/other.js"],"names":["NAMES","require","recordDistributedTrace","recordBackground","segment","scope","tx","transaction","type","baseSegment","duration","getDurationInMillis","exclusive","getExclusiveDurationInMillis","totalTime","trace","getTotalTimeDurationInMillis","name","partialName","measure","OTHER_TRANSACTION","TOTAL_TIME","RESPONSE_TIME","agent","config","distributed_tracing","enabled","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,qBAAD,CAArB;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,qBAAD,CAAtC;;AAEA,SAASE,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;AACxC;AACA,MAAIC,EAAE,GAAGF,OAAO,CAACG,WAAjB;;AACA,MAAID,EAAE,CAACE,IAAH,KAAY,IAAZ,IAAoBF,EAAE,CAACG,WAAvB,IAAsCL,OAAO,KAAKE,EAAE,CAACG,WAAzD,EAAsE;AACpE;AACD;;AAED,MAAIC,QAAQ,GAAGN,OAAO,CAACO,mBAAR,EAAf;AACA,MAAIC,SAAS,GAAGR,OAAO,CAACS,4BAAR,EAAhB;AACA,MAAIC,SAAS,GAAGV,OAAO,CAACG,WAAR,CAAoBQ,KAApB,CAA0BC,4BAA1B,EAAhB;AACA,MAAIC,IAAI,GAAGb,OAAO,CAACc,WAAnB;;AAEA,MAAIb,KAAJ,EAAW;AACTC,IAAAA,EAAE,CAACa,OAAH,CAAWd,KAAX,EAAkB,IAAlB,EAAwBK,QAAxB,EAAkCE,SAAlC;AACAN,IAAAA,EAAE,CAACa,OAAH,CACEnB,KAAK,CAACoB,iBAAN,CAAwBC,UAAxB,GAAqC,GAArC,GAA2CJ,IAD7C,EAEE,IAFF,EAGEH,SAHF,EAIEF,SAJF;AAMD,GApBuC,CAqBxC;AACA;;;AACAN,EAAAA,EAAE,CAACa,OAAH,CACEnB,KAAK,CAACoB,iBAAN,CAAwBE,aAAxB,GAAwC,MAD1C,EAEE,IAFF,EAGEZ,QAHF,EAIEE,SAJF;AAMAN,EAAAA,EAAE,CAACa,OAAH,CAAWnB,KAAK,CAACoB,iBAAN,CAAwBC,UAAnC,EAA+C,IAA/C,EAAqDP,SAArD,EAAgEF,SAAhE;;AAEA,MAAIN,EAAE,CAACiB,KAAH,CAASC,MAAT,CAAgBC,mBAAhB,CAAoCC,OAAxC,EAAiD;AAC/CxB,IAAAA,sBAAsB,CAACI,EAAD,EAAK,OAAL,EAAcI,QAAd,EAAwBE,SAAxB,CAAtB;AACD;AACF;;AAEDe,MAAM,CAACC,OAAP,GAAiBzB,gBAAjB","sourcesContent":["'use strict'\n\nconst NAMES = require('../../metrics/names')\nconst recordDistributedTrace = require('./distributed-trace')\n\nfunction recordBackground(segment, scope) {\n  // if there was a nested otherTransaction use its recorder instead\n  var tx = segment.transaction\n  if (tx.type === 'bg' && tx.baseSegment && segment !== tx.baseSegment) {\n    return\n  }\n\n  var duration = segment.getDurationInMillis()\n  var exclusive = segment.getExclusiveDurationInMillis()\n  var totalTime = segment.transaction.trace.getTotalTimeDurationInMillis()\n  var name = segment.partialName\n\n  if (scope) {\n    tx.measure(scope, null, duration, exclusive)\n    tx.measure(\n      NAMES.OTHER_TRANSACTION.TOTAL_TIME + '/' + name,\n      null,\n      totalTime,\n      exclusive\n    )\n  }\n  // rollup for background total time doesn't have `/all` where the response\n  // time version does.\n  tx.measure(\n    NAMES.OTHER_TRANSACTION.RESPONSE_TIME + '/all',\n    null,\n    duration,\n    exclusive\n  )\n  tx.measure(NAMES.OTHER_TRANSACTION.TOTAL_TIME, null, totalTime, exclusive)\n\n  if (tx.agent.config.distributed_tracing.enabled) {\n    recordDistributedTrace(tx, 'Other', duration, exclusive)\n  }\n}\n\nmodule.exports = recordBackground\n"]},"metadata":{},"sourceType":"script"}