{"ast":null,"code":"'use strict';\n\nconst logger = require('../logger').child({\n  component: 'custom-event-aggregator'\n});\n\nconst EventAggregator = require('../aggregators/event-aggregator');\n\nconst NAMES = require('../metrics/names');\n\nclass CustomEventAggregator extends EventAggregator {\n  constructor(opts, collector, metrics) {\n    opts = opts || {};\n    opts.method = opts.method || 'custom_event_data';\n    opts.metricNames = NAMES.CUSTOM_EVENTS;\n    super(opts, collector, metrics);\n  }\n\n  _toPayloadSync() {\n    const events = this.events;\n\n    if (events.length === 0) {\n      logger.debug('No custom events to send.');\n      return;\n    }\n\n    const eventData = events.toArray();\n    return [this.runId, eventData];\n  }\n\n}\n\nmodule.exports = CustomEventAggregator;","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/custom-events/custom-event-aggregator.js"],"names":["logger","require","child","component","EventAggregator","NAMES","CustomEventAggregator","constructor","opts","collector","metrics","method","metricNames","CUSTOM_EVENTS","_toPayloadSync","events","length","debug","eventData","toArray","runId","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,KAArB,CAA2B;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAA3B,CAAf;;AACA,MAAMC,eAAe,GAAGH,OAAO,CAAC,iCAAD,CAA/B;;AAEA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,kBAAD,CAArB;;AAEA,MAAMK,qBAAN,SAAoCF,eAApC,CAAoD;AAClDG,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,EAA2B;AACpCF,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,IAAAA,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAL,IAAe,mBAA7B;AACAH,IAAAA,IAAI,CAACI,WAAL,GAAmBP,KAAK,CAACQ,aAAzB;AAEA,UAAML,IAAN,EAAYC,SAAZ,EAAuBC,OAAvB;AACD;;AAEDI,EAAAA,cAAc,GAAG;AACf,UAAMC,MAAM,GAAG,KAAKA,MAApB;;AAEA,QAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvBhB,MAAAA,MAAM,CAACiB,KAAP,CAAa,2BAAb;AACA;AACD;;AAED,UAAMC,SAAS,GAAGH,MAAM,CAACI,OAAP,EAAlB;AAEA,WAAO,CAAC,KAAKC,KAAN,EAAaF,SAAb,CAAP;AACD;;AApBiD;;AAuBpDG,MAAM,CAACC,OAAP,GAAiBhB,qBAAjB","sourcesContent":["'use strict'\n\nconst logger = require('../logger').child({component: 'custom-event-aggregator'})\nconst EventAggregator = require('../aggregators/event-aggregator')\n\nconst NAMES = require('../metrics/names')\n\nclass CustomEventAggregator extends EventAggregator {\n  constructor(opts, collector, metrics) {\n    opts = opts || {}\n    opts.method = opts.method || 'custom_event_data'\n    opts.metricNames = NAMES.CUSTOM_EVENTS\n\n    super(opts, collector, metrics)\n  }\n\n  _toPayloadSync() {\n    const events = this.events\n\n    if (events.length === 0) {\n      logger.debug('No custom events to send.')\n      return\n    }\n\n    const eventData = events.toArray()\n\n    return [this.runId, eventData]\n  }\n}\n\nmodule.exports = CustomEventAggregator\n"]},"metadata":{},"sourceType":"script"}