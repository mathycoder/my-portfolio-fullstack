{"ast":null,"code":"'use strict';\n\nfunction isValidHarvestConfig(harvestConfig) {\n  if (harvestConfig == null) {\n    return false;\n  }\n\n  const harvestLimits = harvestConfig.harvest_limits;\n  const isValid = isValidHarvestValue(harvestConfig.report_period_ms) && harvestLimits != null && Object.keys(harvestLimits).length > 0;\n  return isValid;\n}\n\nfunction isValidHarvestValue(value) {\n  const isValid = value != null && value >= 0;\n  return !!isValid;\n}\n\nmodule.exports = {\n  isValidHarvestConfig: isValidHarvestConfig,\n  isValidHarvestValue: isValidHarvestValue\n};","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/config/harvest-config-validator.js"],"names":["isValidHarvestConfig","harvestConfig","harvestLimits","harvest_limits","isValid","isValidHarvestValue","report_period_ms","Object","keys","length","value","module","exports"],"mappings":"AAAA;;AAEA,SAASA,oBAAT,CAA8BC,aAA9B,EAA6C;AAC3C,MAAIA,aAAa,IAAI,IAArB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,QAAMC,aAAa,GAAGD,aAAa,CAACE,cAApC;AAEA,QAAMC,OAAO,GACXC,mBAAmB,CAACJ,aAAa,CAACK,gBAAf,CAAnB,IACAJ,aAAa,IAAI,IADjB,IAEAK,MAAM,CAACC,IAAP,CAAYN,aAAZ,EAA2BO,MAA3B,GAAoC,CAHtC;AAKA,SAAOL,OAAP;AACD;;AAED,SAASC,mBAAT,CAA6BK,KAA7B,EAAoC;AAClC,QAAMN,OAAO,GAAGM,KAAK,IAAI,IAAT,IAAkBA,KAAK,IAAI,CAA3C;AACA,SAAO,CAAC,CAACN,OAAT;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACfZ,EAAAA,oBAAoB,EAAEA,oBADP;AAEfK,EAAAA,mBAAmB,EAAEA;AAFN,CAAjB","sourcesContent":["'use strict'\n\nfunction isValidHarvestConfig(harvestConfig) {\n  if (harvestConfig == null) {\n    return false\n  }\n\n  const harvestLimits = harvestConfig.harvest_limits\n\n  const isValid =\n    isValidHarvestValue(harvestConfig.report_period_ms) &&\n    harvestLimits != null &&\n    Object.keys(harvestLimits).length > 0\n\n  return isValid\n}\n\nfunction isValidHarvestValue(value) {\n  const isValid = value != null && (value >= 0)\n  return !!isValid\n}\n\nmodule.exports = {\n  isValidHarvestConfig: isValidHarvestConfig,\n  isValidHarvestValue: isValidHarvestValue\n}\n"]},"metadata":{},"sourceType":"script"}