{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Daniel Imms <http://www.growingwiththeweb.com>\n * Released under MIT license. See LICENSE in the project root for details.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NodeListIterator =\n/** @class */\nfunction () {\n  /**\n   * Creates an Iterator used to simplify the consolidate() method. It works by\n   * making a shallow copy of the nodes in the root list and iterating over the\n   * shallow copy instead of the source as the source will be modified.\n   * @param start A node from the root list.\n   */\n  function NodeListIterator(start) {\n    this._index = -1;\n    this._items = [];\n    var current = start;\n\n    do {\n      this._items.push(current);\n\n      current = current.next;\n    } while (start !== current);\n  }\n  /**\n   * @return Whether there is a next node in the iterator.\n   */\n\n\n  NodeListIterator.prototype.hasNext = function () {\n    return this._index < this._items.length - 1;\n  };\n  /**\n   * @return The next node.\n   */\n\n\n  NodeListIterator.prototype.next = function () {\n    return this._items[++this._index];\n  };\n\n  return NodeListIterator;\n}();\n\nexports.NodeListIterator = NodeListIterator;","map":{"version":3,"sources":["../src/nodeListIterator.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;AAQA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAIE;;;;;;AAMA,WAAA,gBAAA,CAAY,KAAZ,EAA6B;AAC3B,SAAK,MAAL,GAAc,CAAC,CAAf;AACA,SAAK,MAAL,GAAc,EAAd;AACA,QAAI,OAAO,GAAG,KAAd;;AACA,OAAG;AACD,WAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB;;AACA,MAAA,OAAO,GAAG,OAAO,CAAC,IAAlB;AACD,KAHD,QAGS,KAAK,KAAK,OAHnB;AAID;AAED;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,WAAO,KAAK,MAAL,GAAc,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAA1C;AACD,GAFM;AAIP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,WAAO,KAAK,MAAL,CAAY,EAAE,KAAK,MAAnB,CAAP;AACD,GAFM;;AAGT,SAAA,gBAAA;AAAC,CAjCD,EAAA;;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Daniel Imms <http://www.growingwiththeweb.com>\n * Released under MIT license. See LICENSE in the project root for details.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeListIterator = /** @class */ (function () {\n    /**\n     * Creates an Iterator used to simplify the consolidate() method. It works by\n     * making a shallow copy of the nodes in the root list and iterating over the\n     * shallow copy instead of the source as the source will be modified.\n     * @param start A node from the root list.\n     */\n    function NodeListIterator(start) {\n        this._index = -1;\n        this._items = [];\n        var current = start;\n        do {\n            this._items.push(current);\n            current = current.next;\n        } while (start !== current);\n    }\n    /**\n     * @return Whether there is a next node in the iterator.\n     */\n    NodeListIterator.prototype.hasNext = function () {\n        return this._index < this._items.length - 1;\n    };\n    /**\n     * @return The next node.\n     */\n    NodeListIterator.prototype.next = function () {\n        return this._items[++this._index];\n    };\n    return NodeListIterator;\n}());\nexports.NodeListIterator = NodeListIterator;\n//# sourceMappingURL=nodeListIterator.js.map"]},"metadata":{},"sourceType":"script"}