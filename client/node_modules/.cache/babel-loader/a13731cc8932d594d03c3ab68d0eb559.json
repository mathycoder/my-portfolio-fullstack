{"ast":null,"code":"'use strict';\n\nvar hasOwnProperty = Object.hasOwnProperty; // The logger needs to be lazy-loaded to get around ordering issues with config.\n\nvar _logger = null;\n\nvar getLogger = function makeLogger() {\n  _logger = require('../logger').child({\n    component: 'util-properties'\n  });\n\n  getLogger = function reallyGetLogger() {\n    return _logger;\n  };\n\n  return _logger;\n};\n/**\n * Checks if an object has its own property with the given key.\n *\n * It is possible to create objects which do not inherit from `Object` by doing\n * `Object.create(null)`. These objects do not have the `hasOwnProperty` method.\n * This method uses a cached version of `hasOwnProperty` to check for the\n * property, thus avoiding the potential `undefined is not a function` error.\n *\n * @private\n *\n * @param {*}       obj - The item to check for the property on.\n * @param {string}  key - The name of the property to look for.\n *\n * @return {bool} True if the given object has its own property with the given\n *  key.\n */\n\n\nexports.hasOwn = function hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n};\n/**\n * Checks if a given object is empty.\n *\n * @param {*} obj - The object to check for properties on.\n *\n * @return {bool} True if the object has no keys of its own.\n */\n\n\nexports.isEmpty = function isEmpty(obj) {\n  // Use this case for null prototyped objects.\n  for (var key in obj) {\n    if (exports.hasOwn(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Sets a non-enumerable property on an object with the given value.\n *\n * XXX: This process is very slow, so use only when necessary. Check the\n * configuration `transaction_tracer.hide_internals` before calling this.\n *\n * @private\n *\n * @param {*}       obj   - The item to add the hidden property to.\n * @param {string}  name  - The name of the property to add.\n * @param {*}       val   - The value to set the property to.\n *\n * @return {*} The `obj` argument.\n */\n\n\nexports.setInternal = function setInternalProperty(obj, name, val) {\n  if (!obj || !name) {\n    getLogger().debug('Not setting property; object or name is missing.');\n    return obj;\n  }\n\n  try {\n    if (!exports.hasOwn(obj, name)) {\n      Object.defineProperty(obj, name, {\n        enumerable: false,\n        writable: true,\n        value: val\n      });\n    } else {\n      obj[name] = val;\n    }\n  } catch (err) {\n    getLogger().debug(err, 'Failed to set property \"%s\" to %j', name, val);\n  }\n\n  return obj;\n};","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/util/properties.js"],"names":["hasOwnProperty","Object","_logger","getLogger","makeLogger","require","child","component","reallyGetLogger","exports","hasOwn","obj","key","call","isEmpty","setInternal","setInternalProperty","name","val","debug","defineProperty","enumerable","writable","value","err"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,MAAM,CAACD,cAA5B,C,CAEA;;AACA,IAAIE,OAAO,GAAG,IAAd;;AACA,IAAIC,SAAS,GAAG,SAASC,UAAT,GAAsB;AACpCF,EAAAA,OAAO,GAAGG,OAAO,CAAC,WAAD,CAAP,CAAqBC,KAArB,CAA2B;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAA3B,CAAV;;AACAJ,EAAAA,SAAS,GAAG,SAASK,eAAT,GAA2B;AACrC,WAAON,OAAP;AACD,GAFD;;AAGA,SAAOA,OAAP;AACD,CAND;AAQA;;;;;;;;;;;;;;;;;;AAgBAO,OAAO,CAACC,MAAR,GAAiB,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACzC,SAAOZ,cAAc,CAACa,IAAf,CAAoBF,GAApB,EAAyBC,GAAzB,CAAP;AACD,CAFD;AAIA;;;;;;;;;AAOAH,OAAO,CAACK,OAAR,GAAkB,SAASA,OAAT,CAAiBH,GAAjB,EAAsB;AACtC;AACA,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIF,OAAO,CAACC,MAAR,CAAeC,GAAf,EAAoBC,GAApB,CAAJ,EAA8B;AAC5B,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CARD;AAUA;;;;;;;;;;;;;;;;AAcAH,OAAO,CAACM,WAAR,GAAsB,SAASC,mBAAT,CAA6BL,GAA7B,EAAkCM,IAAlC,EAAwCC,GAAxC,EAA6C;AACjE,MAAI,CAACP,GAAD,IAAQ,CAACM,IAAb,EAAmB;AACjBd,IAAAA,SAAS,GAAGgB,KAAZ,CAAkB,kDAAlB;AACA,WAAOR,GAAP;AACD;;AAED,MAAI;AACF,QAAI,CAACF,OAAO,CAACC,MAAR,CAAeC,GAAf,EAAoBM,IAApB,CAAL,EAAgC;AAC9BhB,MAAAA,MAAM,CAACmB,cAAP,CAAsBT,GAAtB,EAA2BM,IAA3B,EAAiC;AAC/BI,QAAAA,UAAU,EAAE,KADmB;AAE/BC,QAAAA,QAAQ,EAAE,IAFqB;AAG/BC,QAAAA,KAAK,EAAEL;AAHwB,OAAjC;AAKD,KAND,MAMO;AACLP,MAAAA,GAAG,CAACM,IAAD,CAAH,GAAYC,GAAZ;AACD;AACF,GAVD,CAUE,OAAOM,GAAP,EAAY;AACZrB,IAAAA,SAAS,GAAGgB,KAAZ,CAAkBK,GAAlB,EAAuB,mCAAvB,EAA4DP,IAA5D,EAAkEC,GAAlE;AACD;;AACD,SAAOP,GAAP;AACD,CApBD","sourcesContent":["'use strict'\n\nvar hasOwnProperty = Object.hasOwnProperty\n\n// The logger needs to be lazy-loaded to get around ordering issues with config.\nvar _logger = null\nvar getLogger = function makeLogger() {\n  _logger = require('../logger').child({component: 'util-properties'})\n  getLogger = function reallyGetLogger() {\n    return _logger\n  }\n  return _logger\n}\n\n/**\n * Checks if an object has its own property with the given key.\n *\n * It is possible to create objects which do not inherit from `Object` by doing\n * `Object.create(null)`. These objects do not have the `hasOwnProperty` method.\n * This method uses a cached version of `hasOwnProperty` to check for the\n * property, thus avoiding the potential `undefined is not a function` error.\n *\n * @private\n *\n * @param {*}       obj - The item to check for the property on.\n * @param {string}  key - The name of the property to look for.\n *\n * @return {bool} True if the given object has its own property with the given\n *  key.\n */\nexports.hasOwn = function hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Checks if a given object is empty.\n *\n * @param {*} obj - The object to check for properties on.\n *\n * @return {bool} True if the object has no keys of its own.\n */\nexports.isEmpty = function isEmpty(obj) {\n  // Use this case for null prototyped objects.\n  for (var key in obj) {\n    if (exports.hasOwn(obj, key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Sets a non-enumerable property on an object with the given value.\n *\n * XXX: This process is very slow, so use only when necessary. Check the\n * configuration `transaction_tracer.hide_internals` before calling this.\n *\n * @private\n *\n * @param {*}       obj   - The item to add the hidden property to.\n * @param {string}  name  - The name of the property to add.\n * @param {*}       val   - The value to set the property to.\n *\n * @return {*} The `obj` argument.\n */\nexports.setInternal = function setInternalProperty(obj, name, val) {\n  if (!obj || !name) {\n    getLogger().debug('Not setting property; object or name is missing.')\n    return obj\n  }\n\n  try {\n    if (!exports.hasOwn(obj, name)) {\n      Object.defineProperty(obj, name, {\n        enumerable: false,\n        writable: true,\n        value: val\n      })\n    } else {\n      obj[name] = val\n    }\n  } catch (err) {\n    getLogger().debug(err, 'Failed to set property \"%s\" to %j', name, val)\n  }\n  return obj\n}\n"]},"metadata":{},"sourceType":"script"}