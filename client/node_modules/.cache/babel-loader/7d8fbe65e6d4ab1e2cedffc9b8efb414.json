{"ast":null,"code":"'use strict';\n\nconst AGENT_RUN_BEHAVIOR = {\n  SHUTDOWN: Symbol('Shutdown'),\n  PRESERVE: Symbol('Preserve'),\n  RESTART: Symbol('Restart')\n};\n/**\n * Encapsulates all the possible actions to take in response to the collector.\n */\n\nclass CollectorResponse {\n  constructor(retainData, retryAfter, agentRun, payload) {\n    this.retainData = retainData;\n    this.retryAfter = retryAfter;\n    this.agentRun = agentRun;\n    this.payload = payload;\n  }\n\n  static get AGENT_RUN_BEHAVIOR() {\n    return AGENT_RUN_BEHAVIOR;\n  }\n\n  static success(payload) {\n    return new CollectorResponse(false, 0, AGENT_RUN_BEHAVIOR.PRESERVE, payload);\n  }\n\n  static discard(payload) {\n    return this.success(payload);\n  }\n\n  static error(payload) {\n    return new CollectorResponse(true, 0, AGENT_RUN_BEHAVIOR.PRESERVE, payload);\n  }\n\n  static fatal(payload) {\n    return new CollectorResponse(false, 0, AGENT_RUN_BEHAVIOR.SHUTDOWN, payload);\n  }\n\n  static retry(delayMS, payload) {\n    return new CollectorResponse(true, delayMS, AGENT_RUN_BEHAVIOR.PRESERVE, payload);\n  }\n\n  static reconnect(delayMS, payload) {\n    return new CollectorResponse(false, delayMS, AGENT_RUN_BEHAVIOR.RESTART, payload);\n  }\n\n  shouldPreserveRun() {\n    return this.agentRun === AGENT_RUN_BEHAVIOR.PRESERVE;\n  }\n\n  shouldShutdownRun() {\n    return this.agentRun === AGENT_RUN_BEHAVIOR.SHUTDOWN;\n  }\n\n  shouldRestartRun() {\n    return this.agentRun === AGENT_RUN_BEHAVIOR.RESTART;\n  }\n\n}\n\nmodule.exports = CollectorResponse;","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/collector/response.js"],"names":["AGENT_RUN_BEHAVIOR","SHUTDOWN","Symbol","PRESERVE","RESTART","CollectorResponse","constructor","retainData","retryAfter","agentRun","payload","success","discard","error","fatal","retry","delayMS","reconnect","shouldPreserveRun","shouldShutdownRun","shouldRestartRun","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAEC,MAAM,CAAC,UAAD,CADS;AAEzBC,EAAAA,QAAQ,EAAED,MAAM,CAAC,UAAD,CAFS;AAGzBE,EAAAA,OAAO,EAAEF,MAAM,CAAC,SAAD;AAHU,CAA3B;AAMA;;;;AAGA,MAAMG,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,UAAb,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;AACrD,SAAKH,UAAL,GAAkBA,UAAlB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;AAED,aAAWV,kBAAX,GAAgC;AAC9B,WAAOA,kBAAP;AACD;;AAED,SAAOW,OAAP,CAAeD,OAAf,EAAwB;AACtB,WAAO,IAAIL,iBAAJ,CAAsB,KAAtB,EAA6B,CAA7B,EAAgCL,kBAAkB,CAACG,QAAnD,EAA6DO,OAA7D,CAAP;AACD;;AAED,SAAOE,OAAP,CAAeF,OAAf,EAAwB;AACtB,WAAO,KAAKC,OAAL,CAAaD,OAAb,CAAP;AACD;;AAED,SAAOG,KAAP,CAAaH,OAAb,EAAsB;AACpB,WAAO,IAAIL,iBAAJ,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BL,kBAAkB,CAACG,QAAlD,EAA4DO,OAA5D,CAAP;AACD;;AAED,SAAOI,KAAP,CAAaJ,OAAb,EAAsB;AACpB,WAAO,IAAIL,iBAAJ,CAAsB,KAAtB,EAA6B,CAA7B,EAAgCL,kBAAkB,CAACC,QAAnD,EAA6DS,OAA7D,CAAP;AACD;;AAED,SAAOK,KAAP,CAAaC,OAAb,EAAsBN,OAAtB,EAA+B;AAC7B,WAAO,IAAIL,iBAAJ,CAAsB,IAAtB,EAA4BW,OAA5B,EAAqChB,kBAAkB,CAACG,QAAxD,EAAkEO,OAAlE,CAAP;AACD;;AAED,SAAOO,SAAP,CAAiBD,OAAjB,EAA0BN,OAA1B,EAAmC;AACjC,WAAO,IAAIL,iBAAJ,CAAsB,KAAtB,EAA6BW,OAA7B,EAAsChB,kBAAkB,CAACI,OAAzD,EAAkEM,OAAlE,CAAP;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKT,QAAL,KAAkBT,kBAAkB,CAACG,QAA5C;AACD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKV,QAAL,KAAkBT,kBAAkB,CAACC,QAA5C;AACD;;AAEDmB,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKX,QAAL,KAAkBT,kBAAkB,CAACI,OAA5C;AACD;;AA9CqB;;AAiDxBiB,MAAM,CAACC,OAAP,GAAiBjB,iBAAjB","sourcesContent":["'use strict'\n\nconst AGENT_RUN_BEHAVIOR = {\n  SHUTDOWN: Symbol('Shutdown'),\n  PRESERVE: Symbol('Preserve'),\n  RESTART: Symbol('Restart')\n}\n\n/**\n * Encapsulates all the possible actions to take in response to the collector.\n */\nclass CollectorResponse {\n  constructor(retainData, retryAfter, agentRun, payload) {\n    this.retainData = retainData\n    this.retryAfter = retryAfter\n    this.agentRun = agentRun\n    this.payload = payload\n  }\n\n  static get AGENT_RUN_BEHAVIOR() {\n    return AGENT_RUN_BEHAVIOR\n  }\n\n  static success(payload) {\n    return new CollectorResponse(false, 0, AGENT_RUN_BEHAVIOR.PRESERVE, payload)\n  }\n\n  static discard(payload) {\n    return this.success(payload)\n  }\n\n  static error(payload) {\n    return new CollectorResponse(true, 0, AGENT_RUN_BEHAVIOR.PRESERVE, payload)\n  }\n\n  static fatal(payload) {\n    return new CollectorResponse(false, 0, AGENT_RUN_BEHAVIOR.SHUTDOWN, payload)\n  }\n\n  static retry(delayMS, payload) {\n    return new CollectorResponse(true, delayMS, AGENT_RUN_BEHAVIOR.PRESERVE, payload)\n  }\n\n  static reconnect(delayMS, payload) {\n    return new CollectorResponse(false, delayMS, AGENT_RUN_BEHAVIOR.RESTART, payload)\n  }\n\n  shouldPreserveRun() {\n    return this.agentRun === AGENT_RUN_BEHAVIOR.PRESERVE\n  }\n\n  shouldShutdownRun() {\n    return this.agentRun === AGENT_RUN_BEHAVIOR.SHUTDOWN\n  }\n\n  shouldRestartRun() {\n    return this.agentRun === AGENT_RUN_BEHAVIOR.RESTART\n  }\n}\n\nmodule.exports = CollectorResponse\n"]},"metadata":{},"sourceType":"script"}