{"ast":null,"code":"'use strict';\n\nvar logger = require('../logger.js').child({\n  component: 'name-state'\n});\n\nvar NAMES = require('../metrics/names'); // TODO: Figure out a way to phase out legacy transaction names.\n\n\nvar LEGACY_NAMING = {\n  Custom: true,\n  Connect: true,\n  Director: true,\n  Expressjs: true,\n  Hapi: true,\n  Nodejs: true,\n  Restify: true\n};\nconst STATUS_CODE_NAMES = {\n  404: '(not found)',\n  501: '(not implemented)',\n  405: '(method not allowed)'\n};\n/**\n * Manages transaction names using a stack of paths.\n *\n * @constructor\n */\n\nfunction NameState(prefix, verb, delimiter, path) {\n  this.reset();\n  this.setName(prefix, verb, delimiter, path);\n  this._frozen = false;\n}\n\nNameState.prototype.setName = function setName(prefix, verb, delimiter, path) {\n  if (this._frozen) {\n    return;\n  }\n\n  this.setPrefix(prefix);\n  this.verb = verb && verb.toUpperCase();\n  this.delimiter = delimiter;\n  this.pathStack = path ? [{\n    path: path,\n    params: null\n  }] : [];\n  this._pathCache = null;\n  this.markedPath = [];\n  logger.trace('setName called on name state, path stack now %j', this.pathStack);\n};\n\nNameState.prototype.getStatusName = function getStatusName(statusCode) {\n  const name = STATUS_CODE_NAMES[statusCode];\n\n  if (name) {\n    if (LEGACY_NAMING.hasOwnProperty(this.prefix)) {\n      return _getName(this, name);\n    }\n\n    return NAMES.WEB.FRAMEWORK_PREFIX + '/' + _getName(this, name);\n  }\n};\n\nNameState.prototype.markPath = function markPath() {\n  this.markedPath = this.pathStack.slice();\n};\n/**\n * Sets the metric prefix (i.e. Expressjs).\n */\n\n\nNameState.prototype.setPrefix = function setPrefix(prefix) {\n  if (this._frozen) {\n    return;\n  }\n\n  if (prefix === null) {\n    this.prefix = null;\n    return;\n  }\n\n  this.prefix = prefix[prefix.length - 1] === '/' ? prefix.substring(0, prefix.length - 1) : prefix;\n};\n/**\n * Sets the HTTP verb (i.e. GET/POST/PUT)\n */\n\n\nNameState.prototype.setVerb = function setVerb(verb) {\n  if (!this._frozen) {\n    this.verb = verb && verb.toUpperCase();\n  }\n};\n/**\n * Sets the delimiter character used to separate the http verb from the path.\n */\n\n\nNameState.prototype.setDelimiter = function setDelimiter(delimiter) {\n  if (!this._frozen) {\n    this.delimiter = delimiter;\n  }\n};\n\nNameState.prototype.isEmpty = function isEmpty() {\n  return this.pathStack.length === 0 && this.markedPath.length === 0;\n};\n/**\n * Pushes a new path element onto the naming stack.\n */\n\n\nNameState.prototype.appendPath = function appendPath(path, params) {\n  if (!this._frozen && path != null) {\n    var strPath = path instanceof RegExp ? path.source : String(path);\n    this.pathStack.push({\n      path: strPath,\n      params: params || null\n    });\n\n    if (path !== '') {\n      this._pathCache = null;\n    }\n\n    logger.trace('Appended %s to path stack', strPath);\n  }\n};\n/**\n * Pushes a new path element onto the naming stack if the stack is\n * empty.\n */\n\n\nNameState.prototype.appendPathIfEmpty = function appendPathIfEmpty(path, params) {\n  if (!this._frozen && this.isEmpty()) {\n    return this.appendPath(path, params || null);\n  }\n};\n/**\n * Pops the last element off the name stack.\n *\n * If `path` is provided, the stack is popped back to the first element matching\n * `path`. If no element matches, the stack is left unchanged.\n *\n * @param {string} [path] - Optional. A path piece to pop back to.\n */\n\n\nNameState.prototype.popPath = function popPath(path) {\n  if (this._frozen || this.pathStack.length === 0) {\n    return;\n  }\n\n  this._pathCache = null;\n  var pops = 0;\n\n  if (path != null) {\n    const idx = _findLastIndex(this.pathStack, a => a.path === path);\n\n    if (idx !== -1) {\n      pops = this.pathStack.length - idx;\n      this.pathStack.splice(idx);\n    }\n  } else {\n    pops = 1;\n    this.pathStack.pop();\n  }\n\n  logger.trace('Popped %j from path, %d removed', path, pops);\n};\n\nNameState.prototype.getPath = function getPath() {\n  var ps = !this.pathStack.length ? this.markedPath : this.pathStack;\n  var psLength = ps.length;\n\n  if (this._pathCache) {\n    return this._pathCache;\n  } else if (psLength === 0) {\n    return null; // nameState initialized but never set\n  }\n\n  var path = '/';\n\n  for (var i = 0; i < psLength; ++i) {\n    var a = ps[i].path;\n\n    if (a && a !== '/') {\n      if (a[0] !== '/' && path[path.length - 1] !== '/') {\n        path += '/';\n      } else if (a[0] === '/' && path[path.length - 1] === '/') {\n        a = a.substr(1);\n      }\n\n      path += a;\n    }\n  }\n\n  return this._pathCache = path;\n};\n\nNameState.prototype.getNameNotFound = function getNameNotFound() {\n  var name = _getName(this, '(not found)');\n\n  if (LEGACY_NAMING.hasOwnProperty(this.prefix)) {\n    return name;\n  }\n\n  return NAMES.WEB.FRAMEWORK_PREFIX + '/' + name;\n};\n\nNameState.prototype.getName = function getName() {\n  var path = this.getPath();\n\n  if (path === null) {\n    return null;\n  }\n\n  return _getName(this, path);\n};\n\nNameState.prototype.getFullName = function getFullName() {\n  var name = this.getName();\n\n  if (LEGACY_NAMING.hasOwnProperty(this.prefix)) {\n    return name;\n  }\n\n  return NAMES.WEB.FRAMEWORK_PREFIX + '/' + name;\n};\n\nNameState.prototype.forEachParams = function forEachParams(fn, ctx) {\n  this.pathStack.forEach(function forEachPathStack(a) {\n    if (a.params) {\n      fn.call(ctx, a.params);\n    }\n  });\n};\n/**\n * Locks the name state, preventing future changes from taking effect.\n */\n\n\nNameState.prototype.freeze = function freeze() {\n  this._frozen = true;\n};\n\nNameState.prototype.reset = function reset() {\n  if (this._frozen) {\n    return;\n  }\n\n  logger.trace('Reset called on name state, path stack was %j', this.pathStack);\n  this.prefix = null;\n  this.verb = null;\n  this.delimiter = null;\n  this.pathStack = [];\n  this._pathCache = null;\n};\n\nfunction _getName(nameState, path) {\n  var verb = nameState.verb ? '/' + nameState.verb : '';\n  return (nameState.prefix || '') + verb + (nameState.delimiter || '') + path;\n}\n/**\n * Finds the last index of a single element in an array matching `pred`.\n *\n * @param {Array}    arr  - Array to search.\n * @param {Function} pred - Predicate function that returns `true` on matches.\n * @param {*}        ctx  - The `this` arg for `pred`.\n *\n * @returns {number} - This index of the last matching item, or `-1`.\n */\n\n\nfunction _findLastIndex(arr, pred, ctx) {\n  for (let i = arr.length - 1; i >= 0; --i) {\n    if (pred.call(ctx, arr[i], i, arr)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = NameState;","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/transaction/name-state.js"],"names":["logger","require","child","component","NAMES","LEGACY_NAMING","Custom","Connect","Director","Expressjs","Hapi","Nodejs","Restify","STATUS_CODE_NAMES","NameState","prefix","verb","delimiter","path","reset","setName","_frozen","prototype","setPrefix","toUpperCase","pathStack","params","_pathCache","markedPath","trace","getStatusName","statusCode","name","hasOwnProperty","_getName","WEB","FRAMEWORK_PREFIX","markPath","slice","length","substring","setVerb","setDelimiter","isEmpty","appendPath","strPath","RegExp","source","String","push","appendPathIfEmpty","popPath","pops","idx","_findLastIndex","a","splice","pop","getPath","ps","psLength","i","substr","getNameNotFound","getName","getFullName","forEachParams","fn","ctx","forEach","forEachPathStack","call","freeze","nameState","arr","pred","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nvar logger = require('../logger.js').child({component: 'name-state'})\nvar NAMES = require('../metrics/names')\n\n// TODO: Figure out a way to phase out legacy transaction names.\nvar LEGACY_NAMING = {\n  Custom: true,\n\n  Connect: true,\n  Director: true,\n  Expressjs: true,\n  Hapi: true,\n  Nodejs: true,\n  Restify: true\n}\n\nconst STATUS_CODE_NAMES = {\n  404: '(not found)',\n  501: '(not implemented)',\n  405: '(method not allowed)'\n}\n\n/**\n * Manages transaction names using a stack of paths.\n *\n * @constructor\n */\nfunction NameState(prefix, verb, delimiter, path) {\n  this.reset()\n  this.setName(prefix, verb, delimiter, path)\n  this._frozen = false\n}\n\nNameState.prototype.setName = function setName(prefix, verb, delimiter, path) {\n  if (this._frozen) {\n    return\n  }\n\n  this.setPrefix(prefix)\n  this.verb = verb && verb.toUpperCase()\n  this.delimiter = delimiter\n  this.pathStack = path ? [{path: path, params: null}] : []\n  this._pathCache = null\n  this.markedPath = []\n  logger.trace('setName called on name state, path stack now %j', this.pathStack)\n}\n\nNameState.prototype.getStatusName = function getStatusName(statusCode) {\n  const name = STATUS_CODE_NAMES[statusCode]\n  if (name) {\n    if (LEGACY_NAMING.hasOwnProperty(this.prefix)) {\n      return _getName(this, name)\n    }\n    return NAMES.WEB.FRAMEWORK_PREFIX + '/' + _getName(this, name)\n  }\n}\n\nNameState.prototype.markPath = function markPath() {\n  this.markedPath = this.pathStack.slice()\n}\n\n/**\n * Sets the metric prefix (i.e. Expressjs).\n */\nNameState.prototype.setPrefix = function setPrefix(prefix) {\n  if (this._frozen) {\n    return\n  }\n\n  if (prefix === null) {\n    this.prefix = null\n    return\n  }\n  this.prefix = (prefix[prefix.length - 1] === '/') ?\n    prefix.substring(0, prefix.length - 1) : prefix\n}\n\n/**\n * Sets the HTTP verb (i.e. GET/POST/PUT)\n */\nNameState.prototype.setVerb = function setVerb(verb) {\n  if (!this._frozen) {\n    this.verb = verb && verb.toUpperCase()\n  }\n}\n\n/**\n * Sets the delimiter character used to separate the http verb from the path.\n */\nNameState.prototype.setDelimiter = function setDelimiter(delimiter) {\n  if (!this._frozen) {\n    this.delimiter = delimiter\n  }\n}\n\nNameState.prototype.isEmpty = function isEmpty() {\n  return this.pathStack.length === 0 && this.markedPath.length === 0\n}\n\n/**\n * Pushes a new path element onto the naming stack.\n */\nNameState.prototype.appendPath = function appendPath(path, params) {\n  if (!this._frozen && path != null) {\n    var strPath = path instanceof RegExp ? path.source : String(path)\n    this.pathStack.push({path: strPath, params: params || null})\n\n    if (path !== '') {\n      this._pathCache = null\n    }\n    logger.trace('Appended %s to path stack', strPath)\n  }\n}\n\n/**\n * Pushes a new path element onto the naming stack if the stack is\n * empty.\n */\nNameState.prototype.appendPathIfEmpty = function appendPathIfEmpty(path, params) {\n  if (!this._frozen && this.isEmpty()) {\n    return this.appendPath(path, params || null)\n  }\n}\n\n/**\n * Pops the last element off the name stack.\n *\n * If `path` is provided, the stack is popped back to the first element matching\n * `path`. If no element matches, the stack is left unchanged.\n *\n * @param {string} [path] - Optional. A path piece to pop back to.\n */\nNameState.prototype.popPath = function popPath(path) {\n  if (this._frozen || this.pathStack.length === 0) {\n    return\n  }\n\n  this._pathCache = null\n  var pops = 0\n  if (path != null) {\n    const idx = _findLastIndex(this.pathStack, (a) => a.path === path)\n    if (idx !== -1) {\n      pops = this.pathStack.length - idx\n      this.pathStack.splice(idx)\n    }\n  } else {\n    pops = 1\n    this.pathStack.pop()\n  }\n  logger.trace('Popped %j from path, %d removed', path, pops)\n}\n\nNameState.prototype.getPath = function getPath() {\n  var ps = !this.pathStack.length ? this.markedPath : this.pathStack\n  var psLength = ps.length\n  if (this._pathCache) {\n    return this._pathCache\n  } else if (psLength === 0) {\n    return null // nameState initialized but never set\n  }\n\n  var path = '/'\n  for (var i = 0; i < psLength; ++i) {\n    var a = ps[i].path\n    if (a && a !== '/') {\n      if (a[0] !== '/' && path[path.length - 1] !== '/') {\n        path += '/'\n      } else if (a[0] === '/' && path[path.length - 1] === '/') {\n        a = a.substr(1)\n      }\n      path += a\n    }\n  }\n\n  return this._pathCache = path\n}\n\nNameState.prototype.getNameNotFound = function getNameNotFound() {\n  var name = _getName(this, '(not found)')\n  if (LEGACY_NAMING.hasOwnProperty(this.prefix)) {\n    return name\n  }\n  return NAMES.WEB.FRAMEWORK_PREFIX + '/' + name\n}\n\nNameState.prototype.getName = function getName() {\n  var path = this.getPath()\n  if (path === null) {\n    return null\n  }\n\n  return _getName(this, path)\n}\n\nNameState.prototype.getFullName = function getFullName() {\n  var name = this.getName()\n  if (LEGACY_NAMING.hasOwnProperty(this.prefix)) {\n    return name\n  }\n  return NAMES.WEB.FRAMEWORK_PREFIX + '/' + name\n}\n\nNameState.prototype.forEachParams = function forEachParams(fn, ctx) {\n  this.pathStack.forEach(function forEachPathStack(a) {\n    if (a.params) {\n      fn.call(ctx, a.params)\n    }\n  })\n}\n\n/**\n * Locks the name state, preventing future changes from taking effect.\n */\nNameState.prototype.freeze = function freeze() {\n  this._frozen = true\n}\n\nNameState.prototype.reset = function reset() {\n  if (this._frozen) {\n    return\n  }\n\n  logger.trace('Reset called on name state, path stack was %j', this.pathStack)\n  this.prefix = null\n  this.verb = null\n  this.delimiter = null\n  this.pathStack = []\n  this._pathCache = null\n}\n\nfunction _getName(nameState, path) {\n  var verb = nameState.verb ? '/' + nameState.verb : ''\n  return (nameState.prefix || '') + verb + (nameState.delimiter || '') + path\n}\n\n/**\n * Finds the last index of a single element in an array matching `pred`.\n *\n * @param {Array}    arr  - Array to search.\n * @param {Function} pred - Predicate function that returns `true` on matches.\n * @param {*}        ctx  - The `this` arg for `pred`.\n *\n * @returns {number} - This index of the last matching item, or `-1`.\n */\nfunction _findLastIndex(arr, pred, ctx) {\n  for (let i = arr.length - 1; i >= 0; --i) {\n    if (pred.call(ctx, arr[i], i, arr)) {\n      return i\n    }\n  }\n  return -1\n}\n\nmodule.exports = NameState\n"]},"metadata":{},"sourceType":"script"}