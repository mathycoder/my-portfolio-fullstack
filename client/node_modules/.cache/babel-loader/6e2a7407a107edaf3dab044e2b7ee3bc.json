{"ast":null,"code":"'use strict';\n\nconst logger = require('../logger').child({\n  component: 'error_tracer'\n});\n\nconst EventAggregator = require('../aggregators/event-aggregator');\n\nconst NAMES = require('../metrics/names');\n\nclass ErrorEventAggregator extends EventAggregator {\n  constructor(opts, collector, metrics) {\n    opts = opts || {};\n    opts.method = opts.method || 'error_event_data';\n    opts.metricNames = NAMES.TRANSACTION_ERROR;\n    super(opts, collector, metrics);\n  }\n\n  _toPayloadSync() {\n    const events = this.events;\n\n    if (events.length === 0) {\n      logger.debug('No error events to send.');\n      return;\n    }\n\n    const metrics = {\n      reservoir_size: events.limit,\n      events_seen: events.seen\n    };\n    const eventData = events.toArray();\n    return [this.runId, metrics, eventData];\n  }\n\n}\n\nmodule.exports = ErrorEventAggregator;","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/errors/error-event-aggregator.js"],"names":["logger","require","child","component","EventAggregator","NAMES","ErrorEventAggregator","constructor","opts","collector","metrics","method","metricNames","TRANSACTION_ERROR","_toPayloadSync","events","length","debug","reservoir_size","limit","events_seen","seen","eventData","toArray","runId","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,KAArB,CAA2B;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAA3B,CAAf;;AACA,MAAMC,eAAe,GAAGH,OAAO,CAAC,iCAAD,CAA/B;;AAEA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,kBAAD,CAArB;;AAEA,MAAMK,oBAAN,SAAmCF,eAAnC,CAAmD;AACjDG,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,EAA2B;AACpCF,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,IAAAA,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAL,IAAe,kBAA7B;AACAH,IAAAA,IAAI,CAACI,WAAL,GAAmBP,KAAK,CAACQ,iBAAzB;AAEA,UAAML,IAAN,EAAYC,SAAZ,EAAuBC,OAAvB;AACD;;AAEDI,EAAAA,cAAc,GAAG;AACf,UAAMC,MAAM,GAAG,KAAKA,MAApB;;AAEA,QAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvBhB,MAAAA,MAAM,CAACiB,KAAP,CAAa,0BAAb;AACA;AACD;;AAED,UAAMP,OAAO,GAAG;AACdQ,MAAAA,cAAc,EAAEH,MAAM,CAACI,KADT;AAEdC,MAAAA,WAAW,EAAEL,MAAM,CAACM;AAFN,KAAhB;AAKA,UAAMC,SAAS,GAAGP,MAAM,CAACQ,OAAP,EAAlB;AAEA,WAAO,CAAC,KAAKC,KAAN,EAAad,OAAb,EAAsBY,SAAtB,CAAP;AACD;;AAzBgD;;AA4BnDG,MAAM,CAACC,OAAP,GAAiBpB,oBAAjB","sourcesContent":["'use strict'\n\nconst logger = require('../logger').child({component: 'error_tracer'})\nconst EventAggregator = require('../aggregators/event-aggregator')\n\nconst NAMES = require('../metrics/names')\n\nclass ErrorEventAggregator extends EventAggregator {\n  constructor(opts, collector, metrics) {\n    opts = opts || {}\n    opts.method = opts.method || 'error_event_data'\n    opts.metricNames = NAMES.TRANSACTION_ERROR\n\n    super(opts, collector, metrics)\n  }\n\n  _toPayloadSync() {\n    const events = this.events\n\n    if (events.length === 0) {\n      logger.debug('No error events to send.')\n      return\n    }\n\n    const metrics = {\n      reservoir_size: events.limit,\n      events_seen: events.seen\n    }\n\n    const eventData = events.toArray()\n\n    return [this.runId, metrics, eventData]\n  }\n}\n\nmodule.exports = ErrorEventAggregator\n"]},"metadata":{},"sourceType":"script"}