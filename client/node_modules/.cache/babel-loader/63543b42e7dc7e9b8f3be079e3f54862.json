{"ast":null,"code":"'use strict';\n\nvar stringify = require('json-stringify-safe');\n\nvar util = require('util');\n\nvar Readable = require('readable-stream');\n\nvar os = require('os');\n\nmodule.exports = Logger;\nconst LEVELS = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60\n}; // The maximum string length in V8 was somewhere around 256M characters for a\n// long time. Note that is characters, not bytes. This limit was upped to around\n// 1G characters sometime during Node 8's lifetime (before 8.3.0 I believe).\n// Using 128M characters as limit to keep the logger well away from the limit\n// and not balloon host machine's memory.\n\nconst MAX_LOG_BUFFER = 1024 * 1024 * 128; // 128M characters\n\nutil.inherits(Logger, Readable);\n\nfunction Logger(options, extra) {\n  if (!(this instanceof Logger)) {\n    return new Logger(options, extra);\n  }\n\n  Readable.call(this);\n  var passedInLevel = this.coerce(options.level);\n  this.options = {\n    _level: passedInLevel,\n    enabled: options.enabled === undefined ? true : options.enabled\n  };\n  this._nestedLog = false;\n  this.name = options.name;\n  this.hostname = options.hostname || os.hostname();\n  this.extra = extra || Object.create(null);\n  this.buffer = '';\n  this.reading = false;\n\n  if (options.stream) {\n    this.pipe(options.stream);\n  }\n}\n\nLogger.MAX_LOG_BUFFER = MAX_LOG_BUFFER;\n\nLogger.prototype.coerce = function coerce(value) {\n  if (!isNaN(parseInt(value, 10)) && isFinite(value)) {\n    // value is numeric\n    if (value < 10) value = 10;\n    if (value > 60) value = 60;\n    return value;\n  }\n\n  return LEVELS[value] || 50;\n};\n\nvar loggingFunctions = Object.create(null);\nObject.keys(LEVELS).forEach(function buildLevel(_level) {\n  var level = Logger.prototype.coerce(LEVELS[_level]);\n\n  function log(extra) {\n    if (!this.options.enabled) return false;\n    if (level < this.options._level) return false;\n    var has_extra = typeof extra === 'object';\n    var args = Array.prototype.slice.call(arguments, has_extra ? 1 : 0);\n    return this.write(level, args, has_extra ? extra : null);\n  }\n\n  loggingFunctions[_level] = function checkLevel() {\n    log.apply(this, arguments);\n  };\n\n  var seenMessages = Object.create(null);\n\n  loggingFunctions[_level + 'Once'] = function logOnce(key) {\n    if (typeof key !== 'string') {\n      this.debug('Attempted to key on a non-string in ' + _level + 'Once: ' + key);\n      return;\n    }\n\n    if (!this.options.enabled) return false;\n    if (level < this.options._level) return false;\n\n    if (seenMessages[key] !== true) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var writeSuccessful = log.apply(this, args);\n\n      if (writeSuccessful) {\n        seenMessages[key] = true;\n      }\n    }\n  };\n\n  var seenPerInterval = Object.create(null);\n\n  loggingFunctions[_level + 'OncePer'] = function logOncePer(key, interval) {\n    if (typeof key !== 'string') {\n      this.debug('Attempted to key on a non-string in ' + _level + 'Once: ' + key);\n      return;\n    }\n\n    if (!this.options.enabled) return false;\n    if (level < this.options._level) return false;\n\n    if (seenPerInterval[key] !== true) {\n      var args = Array.prototype.slice.call(arguments, 2);\n      var writeSuccessful = log.apply(this, args);\n\n      if (writeSuccessful) {\n        seenPerInterval[key] = true;\n        var clearSeen = setTimeout(function clearKey() {\n          delete seenPerInterval[key];\n        }, interval);\n        clearSeen.unref();\n      }\n    }\n  };\n\n  loggingFunctions[_level + 'Enabled'] = function levelEnabled() {\n    return level >= this.options._level;\n  };\n});\nObject.assign(Logger.prototype, loggingFunctions);\n\nLogger.prototype.child = function child(extra) {\n  var childLogger = Object.create(loggingFunctions);\n  childLogger.extra = Object.assign(Object.create(null), this.extra, extra);\n  var parent = this;\n  childLogger.options = parent.options;\n\n  childLogger.write = function write(level, args, _extra) {\n    _extra = getPropertiesToLog(_extra);\n    _extra = Object.assign(Object.create(null), this.extra, _extra);\n    return parent.write(level, args, _extra);\n  };\n\n  childLogger.setEnabled = Logger.prototype.setEnabled;\n  childLogger.child = Logger.prototype.child;\n  return childLogger;\n};\n\nLogger.prototype.level = function level(lvl) {\n  this.options._level = this.coerce(lvl);\n};\n\nLogger.prototype.setEnabled = function setEnabled(enabled) {\n  if (typeof enabled === 'boolean') {\n    this.options.enabled = enabled;\n  }\n};\n\nLogger.prototype._read = function _read() {\n  if (this.buffer.length !== 0) {\n    this.reading = this.push(this.buffer);\n    this.buffer = '';\n  } else {\n    this.reading = true;\n  }\n};\n/**\n * For performance reasons we do not support %j because we will have\n * already converted the objects to strings.\n * Returns a boolean representing the status of the write\n * (success/failure)\n */\n\n\nLogger.prototype.write = function write(level, args, extra) {\n  if (this._nestedLog) {\n    // This log is downstream of another log call and should be ignored\n    return;\n  }\n\n  this._nestedLog = true;\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    if (typeof args[i] === 'function') {\n      args[i] = args[i].valueOf();\n    } else if (typeof args[i] === 'object') {\n      try {\n        args[i] = stringify(args[i]);\n      } catch (err) {\n        // eslint-disable-line no-unused-vars\n        this.debug('Failed to stringfy object for log');\n        args[i] = '[UNPARSABLE OBJECT]';\n      }\n    }\n  }\n\n  var entry = new Entry(this, level, util.format.apply(util, args));\n  Object.assign(entry, this.extra, getPropertiesToLog(extra));\n  var data = '';\n\n  try {\n    data = stringify(entry) + '\\n';\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    this.debug('Unabled to stringify log message');\n  }\n\n  if (this.reading) {\n    this.reading = this.push(data);\n  } else if (this.buffer.length + data.length < MAX_LOG_BUFFER) {\n    this.buffer += data;\n  } else if (process.emitWarning) {\n    process.emitWarning('Dropping log message, buffer would overflow.', 'NewRelicWarning', 'NRWARN001');\n  }\n\n  this._nestedLog = false;\n  return true;\n};\n\nfunction Entry(logger, level, msg) {\n  this.v = 0;\n  this.level = level;\n  this.name = logger.name;\n  this.hostname = logger.hostname;\n  this.pid = process.pid;\n  this.time = new Date().toISOString();\n  this.msg = msg;\n}\n\nfunction getPropertiesToLog(extra) {\n  var obj = Object.assign(Object.create(null), extra); // Error properties (message, stack) are not enumerable, so getting them directly\n\n  if (extra instanceof Error) {\n    var names = Object.getOwnPropertyNames(extra);\n\n    if (names) {\n      for (var i = 0; i < names.length; i++) {\n        obj[names[i]] = extra[names[i]];\n      }\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/util/logger.js"],"names":["stringify","require","util","Readable","os","module","exports","Logger","LEVELS","trace","debug","info","warn","error","fatal","MAX_LOG_BUFFER","inherits","options","extra","call","passedInLevel","coerce","level","_level","enabled","undefined","_nestedLog","name","hostname","Object","create","buffer","reading","stream","pipe","prototype","value","isNaN","parseInt","isFinite","loggingFunctions","keys","forEach","buildLevel","log","has_extra","args","Array","slice","arguments","write","checkLevel","apply","seenMessages","logOnce","key","writeSuccessful","seenPerInterval","logOncePer","interval","clearSeen","setTimeout","clearKey","unref","levelEnabled","assign","child","childLogger","parent","_extra","getPropertiesToLog","setEnabled","lvl","_read","length","push","i","l","valueOf","err","entry","Entry","format","data","process","emitWarning","logger","msg","v","pid","time","Date","toISOString","obj","Error","names","getOwnPropertyNames"],"mappings":"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","sourcesContent":["'use strict'\n\nvar stringify = require('json-stringify-safe')\nvar util = require('util')\nvar Readable = require('readable-stream')\nvar os = require('os')\n\nmodule.exports = Logger\n\nconst LEVELS = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60\n}\n\n// The maximum string length in V8 was somewhere around 256M characters for a\n// long time. Note that is characters, not bytes. This limit was upped to around\n// 1G characters sometime during Node 8's lifetime (before 8.3.0 I believe).\n// Using 128M characters as limit to keep the logger well away from the limit\n// and not balloon host machine's memory.\nconst MAX_LOG_BUFFER = 1024 * 1024 * 128 // 128M characters\n\nutil.inherits(Logger, Readable)\n\nfunction Logger(options, extra) {\n  if (!(this instanceof Logger)) {\n    return new Logger(options, extra)\n  }\n\n  Readable.call(this)\n  var passedInLevel = this.coerce(options.level)\n  this.options = {\n    _level: passedInLevel,\n    enabled: options.enabled === undefined ? true : options.enabled\n  }\n  this._nestedLog = false\n  this.name = options.name\n  this.hostname = options.hostname || os.hostname()\n  this.extra = extra || Object.create(null)\n  this.buffer = ''\n  this.reading = false\n  if (options.stream) {\n    this.pipe(options.stream)\n  }\n}\nLogger.MAX_LOG_BUFFER = MAX_LOG_BUFFER\n\nLogger.prototype.coerce = function coerce(value) {\n  if (!isNaN(parseInt(value, 10)) && isFinite(value)) {\n    // value is numeric\n    if (value < 10) value = 10\n    if (value > 60) value = 60\n\n    return value\n  }\n  return LEVELS[value] || 50\n}\n\nvar loggingFunctions = Object.create(null)\n\nObject.keys(LEVELS).forEach(function buildLevel(_level) {\n  var level = Logger.prototype.coerce(LEVELS[_level])\n\n  function log(extra) {\n    if (!this.options.enabled) return false\n    if (level < this.options._level) return false\n\n    var has_extra = typeof extra === 'object'\n    var args = Array.prototype.slice.call(arguments, has_extra ? 1 : 0)\n    return this.write(level, args, has_extra ? extra : null)\n  }\n\n  loggingFunctions[_level] = function checkLevel() {\n    log.apply(this, arguments)\n  }\n\n  var seenMessages = Object.create(null)\n  loggingFunctions[_level + 'Once'] = function logOnce(key) {\n    if (typeof key !== 'string') {\n      this.debug('Attempted to key on a non-string in ' + _level + 'Once: ' + key)\n      return\n    }\n\n    if (!this.options.enabled) return false\n    if (level < this.options._level) return false\n\n    if (seenMessages[key] !== true) {\n      var args = Array.prototype.slice.call(arguments, 1)\n      var writeSuccessful = log.apply(this, args)\n\n      if (writeSuccessful) {\n        seenMessages[key] = true\n      }\n    }\n  }\n\n  var seenPerInterval = Object.create(null)\n  loggingFunctions[_level + 'OncePer'] = function logOncePer(key, interval) {\n    if (typeof key !== 'string') {\n      this.debug('Attempted to key on a non-string in ' + _level + 'Once: ' + key)\n      return\n    }\n\n    if (!this.options.enabled) return false\n    if (level < this.options._level) return false\n\n    if (seenPerInterval[key] !== true) {\n      var args = Array.prototype.slice.call(arguments, 2)\n      var writeSuccessful = log.apply(this, args)\n\n      if (writeSuccessful) {\n        seenPerInterval[key] = true\n\n        var clearSeen = setTimeout(function clearKey() {\n          delete seenPerInterval[key]\n        }, interval)\n\n        clearSeen.unref()\n      }\n    }\n  }\n\n  loggingFunctions[_level + 'Enabled'] = function levelEnabled() {\n    return level >= this.options._level\n  }\n})\n\nObject.assign(Logger.prototype, loggingFunctions)\n\nLogger.prototype.child = function child(extra) {\n  var childLogger = Object.create(loggingFunctions)\n\n  childLogger.extra = Object.assign(Object.create(null), this.extra, extra)\n\n  var parent = this\n  childLogger.options = parent.options\n\n  childLogger.write = function write(level, args, _extra) {\n    _extra = getPropertiesToLog(_extra)\n    _extra = Object.assign(Object.create(null), this.extra, _extra)\n\n    return parent.write(level, args, _extra)\n  }\n\n  childLogger.setEnabled = Logger.prototype.setEnabled\n  childLogger.child = Logger.prototype.child\n\n  return childLogger\n}\n\nLogger.prototype.level = function level(lvl) {\n  this.options._level = this.coerce(lvl)\n}\n\nLogger.prototype.setEnabled = function setEnabled(enabled) {\n  if (typeof enabled === 'boolean') {\n    this.options.enabled = enabled\n  }\n}\n\nLogger.prototype._read = function _read() {\n  if (this.buffer.length !== 0) {\n    this.reading = this.push(this.buffer)\n    this.buffer = ''\n  } else {\n    this.reading = true\n  }\n}\n\n/**\n * For performance reasons we do not support %j because we will have\n * already converted the objects to strings.\n * Returns a boolean representing the status of the write\n * (success/failure)\n */\nLogger.prototype.write = function write(level, args, extra) {\n  if (this._nestedLog) {\n    // This log is downstream of another log call and should be ignored\n    return\n  }\n  this._nestedLog = true\n  for (var i = 0, l = args.length; i < l; ++i) {\n    if (typeof args[i] === 'function') {\n      args[i] = args[i].valueOf()\n    } else if (typeof args[i] === 'object') {\n      try {\n        args[i] = stringify(args[i])\n      } catch (err) { // eslint-disable-line no-unused-vars\n        this.debug('Failed to stringfy object for log')\n        args[i] = '[UNPARSABLE OBJECT]'\n      }\n    }\n  }\n\n  var entry = new Entry(this, level, util.format.apply(util, args))\n\n  Object.assign(entry, this.extra, getPropertiesToLog(extra))\n\n  var data = ''\n  try {\n    data = stringify(entry) + '\\n'\n  } catch (err) { // eslint-disable-line no-unused-vars\n    this.debug('Unabled to stringify log message')\n  }\n\n  if (this.reading) {\n    this.reading = this.push(data)\n  } else if (this.buffer.length + data.length < MAX_LOG_BUFFER) {\n    this.buffer += data\n  } else if (process.emitWarning) {\n    process.emitWarning(\n      'Dropping log message, buffer would overflow.',\n      'NewRelicWarning',\n      'NRWARN001'\n    )\n  }\n  this._nestedLog = false\n  return true\n}\n\nfunction Entry(logger, level, msg) {\n  this.v = 0\n  this.level = level\n  this.name = logger.name\n  this.hostname = logger.hostname\n  this.pid = process.pid\n  this.time = new Date().toISOString()\n  this.msg = msg\n}\n\nfunction getPropertiesToLog(extra) {\n  var obj = Object.assign(Object.create(null), extra)\n  // Error properties (message, stack) are not enumerable, so getting them directly\n  if (extra instanceof Error) {\n    var names = Object.getOwnPropertyNames(extra)\n    if (names) {\n      for (var i = 0; i < names.length; i++) {\n        obj[names[i]] = extra[names[i]]\n      }\n    }\n  }\n  return obj\n}\n"]},"metadata":{},"sourceType":"script"}