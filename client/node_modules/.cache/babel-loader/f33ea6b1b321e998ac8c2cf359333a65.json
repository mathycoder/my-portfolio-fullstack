{"ast":null,"code":"'use strict';\n\nvar concat = require('concat-stream');\n\nvar http = require('http');\n\nvar logger = require('../logger').child({\n  component: 'utilization-request'\n});\n\nvar fs = require('../util/unwrapped-core').fs;\n\nvar properties = require('../util/properties');\n\nconst url = require('url');\n\nexports.checkValueString = checkValueString;\n\nfunction checkValueString(str) {\n  if (!str || !str.length || Buffer.byteLength(str) > 255) {\n    return false;\n  }\n\n  var len = str.length;\n  var validCharacters = /[0-9a-zA-Z_ ./-]/;\n\n  for (var i = 0; i < len; ++i) {\n    if (str.charCodeAt(i) < 128 && !validCharacters.test(str[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.getKeys = function getKeys(data, keys) {\n  if (!data) {\n    return null;\n  }\n\n  var results = Object.create(null);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (!properties.hasOwn(data, key) || !data[key]) {\n      logger.debug('Key %s missing from metadata', key);\n      return null;\n    }\n\n    var value = data[key];\n\n    if (typeof value === 'number') {\n      value = value.toString();\n    } // If any value is invalid, the whole thing must be trashed.\n\n\n    if (!checkValueString(value)) {\n      logger.debug('Invalid metadata value found: %s -> %s', key, value);\n      return null;\n    }\n\n    results[key] = value;\n  }\n\n  return results;\n};\n\nexports.request = function request(opts, agent, cb) {\n  // Add default timeout of a second to the request\n  if (typeof opts === 'string') {\n    opts = url.parse(opts);\n  }\n\n  opts.timeout = opts.timeout || 1000;\n  var req = http.get(opts, function awsRequest(res) {\n    res.pipe(concat(respond));\n\n    function respond(data) {\n      agent.removeListener('errored', abortRequest);\n      agent.removeListener('stopped', abortRequest);\n      agent.removeListener('disconnected', abortRequest);\n\n      if (res.statusCode !== 200) {\n        logger.debug('Got %d %s from metadata request %j', res.statusCode, res.statusMessage || '<n/a>', opts);\n        return cb(new Error('Request for metadata failed.'));\n      } else if (!data) {\n        logger.debug('Got no response data?');\n        return cb(new Error('No reponse data received.'));\n      }\n\n      cb(null, data.toString('utf8'));\n    }\n  });\n  req.setTimeout(1000, function requestTimeout() {\n    req.abort();\n  });\n  req.on('error', function requestError(err) {\n    if (err.code === 'ECONNRESET') {\n      logger.debug('Request for metadata %j timed out', opts);\n      return cb(err);\n    }\n\n    logger.debug('Message for metadata %j: %s', opts, err.message);\n    cb(err);\n  });\n  agent.once('errored', abortRequest);\n  agent.once('stopped', abortRequest);\n  agent.once('disconnected', abortRequest);\n\n  function abortRequest() {\n    logger.debug('Aborting request for metadata at %j', opts);\n    req.abort();\n    agent.removeListener('errored', abortRequest);\n    agent.removeListener('stopped', abortRequest);\n    agent.removeListener('disconnected', abortRequest);\n  }\n};\n\nexports.readProc = readProc;\n\nfunction readProc(path, callback) {\n  fs.readFile(path, function readProcFile(err, data) {\n    if (err) {\n      logger.error(err, 'Error when trying to read %s', path);\n      callback(err, null);\n    } else {\n      callback(null, data.toString());\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/my-portfolio/node_modules/newrelic/lib/utilization/common.js"],"names":["concat","require","http","logger","child","component","fs","properties","url","exports","checkValueString","str","length","Buffer","byteLength","len","validCharacters","i","charCodeAt","test","getKeys","data","keys","results","Object","create","key","hasOwn","debug","value","toString","request","opts","agent","cb","parse","timeout","req","get","awsRequest","res","pipe","respond","removeListener","abortRequest","statusCode","statusMessage","Error","setTimeout","requestTimeout","abort","on","requestError","err","code","message","once","readProc","path","callback","readFile","readProcFile","error"],"mappings":"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","sourcesContent":["'use strict'\n\nvar concat = require('concat-stream')\nvar http = require('http')\nvar logger = require('../logger').child({component: 'utilization-request'})\nvar fs = require('../util/unwrapped-core').fs\nvar properties = require('../util/properties')\nconst url = require('url')\n\n\nexports.checkValueString = checkValueString\nfunction checkValueString(str) {\n  if (!str || !str.length || Buffer.byteLength(str) > 255) {\n    return false\n  }\n\n  var len = str.length\n  var validCharacters = /[0-9a-zA-Z_ ./-]/\n  for (var i = 0; i < len; ++i) {\n    if (str.charCodeAt(i) < 128 && !validCharacters.test(str[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.getKeys = function getKeys(data, keys) {\n  if (!data) {\n    return null\n  }\n\n  var results = Object.create(null)\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i]\n    if (!properties.hasOwn(data, key) || !data[key]) {\n      logger.debug('Key %s missing from metadata', key)\n      return null\n    }\n    var value = data[key]\n    if (typeof value === 'number') {\n      value = value.toString()\n    }\n\n    // If any value is invalid, the whole thing must be trashed.\n    if (!checkValueString(value)) {\n      logger.debug('Invalid metadata value found: %s -> %s', key, value)\n      return null\n    }\n    results[key] = value\n  }\n\n  return results\n}\n\nexports.request = function request(opts, agent, cb) {\n  // Add default timeout of a second to the request\n\n  if (typeof opts === 'string') {\n    opts = url.parse(opts)\n  }\n\n  opts.timeout = opts.timeout || 1000\n\n  var req = http.get(opts, function awsRequest(res) {\n    res.pipe(concat(respond))\n    function respond(data) {\n      agent.removeListener('errored', abortRequest)\n      agent.removeListener('stopped', abortRequest)\n      agent.removeListener('disconnected', abortRequest)\n      \n      if (res.statusCode !== 200) {\n        logger.debug(\n          'Got %d %s from metadata request %j',\n          res.statusCode, res.statusMessage || '<n/a>', opts\n        )\n        return cb(new Error('Request for metadata failed.'))\n      } else if (!data) {\n        logger.debug('Got no response data?')\n        return cb(new Error('No reponse data received.'))\n      }\n\n      cb(null, data.toString('utf8'))\n    }\n  })\n\n  req.setTimeout(1000, function requestTimeout() {\n    req.abort()\n  })\n\n  req.on('error', function requestError(err) {\n    if (err.code === 'ECONNRESET') {\n      logger.debug('Request for metadata %j timed out', opts)\n      return cb(err)\n    }\n\n    logger.debug('Message for metadata %j: %s', opts, err.message)\n    cb(err)\n  })\n  agent.once('errored', abortRequest)\n  agent.once('stopped', abortRequest)\n  agent.once('disconnected', abortRequest)\n\n  function abortRequest() {\n    logger.debug('Aborting request for metadata at %j', opts)\n    req.abort()\n    agent.removeListener('errored', abortRequest)\n    agent.removeListener('stopped', abortRequest)\n    agent.removeListener('disconnected', abortRequest)\n  }\n}\n\nexports.readProc = readProc\nfunction readProc(path, callback) {\n  fs.readFile(path, function readProcFile(err, data) {\n    if (err) {\n      logger.error(err, 'Error when trying to read %s', path)\n      callback(err, null)\n    } else {\n      callback(null, data.toString())\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}